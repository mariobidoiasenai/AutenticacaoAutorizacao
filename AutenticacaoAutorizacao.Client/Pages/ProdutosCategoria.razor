@page "/produtoscategoria/{CategoriaId:int}"
@inject IProdutosServices ProdutosService
@inject HttpClient Http
@inject IJSRuntime JS
@inject ICategoriaService CategoriaService

@if (isBusy)
{
    <ExibirSpinner/>
    
}
else
{
    @if (!Produtos.Any())
    {
        <h3>Não há produtos nesta categoria</h3>
    }
    else
    {
        <ExibirProdutos Produtos="Produtos"></ExibirProdutos>
    }
}

@code {
    [Parameter]
    public int CategoriaId { get; set; }

    private bool isBusy = false;

    public Categoria Categoria { get; set; } = new();

    private int CategoriaSelecionada = 0;

    private List<ProdutoDTO> Produtos = new List<ProdutoDTO>();
    private List<Categoria> Categorias = new List<Categoria>();
    protected override async Task OnInitializedAsync()
    {
        Categorias = await CategoriaService.GetAllCategorias();
    }

    protected override async Task OnParametersSetAsync()
    {
        isBusy = true;
        Produtos = await ProdutosService.GetProdutosPorCategoria(CategoriaId);
        isBusy = false;
    }

}
